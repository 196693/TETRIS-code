###### The following parameters are required:
# input_files: relative path of the input files, comma seperated.
# triangle_count: the actual number of triangles in each graph, the order must be same as the input_files.
# seed count: the number of seeds. Multiple options can be provided with comma seperated.
# sparsification_prob: Multiple options can be provided with comma seperated.
# subsample_prob: how many edges to sample from edges collected by random walks
# no_of_repeats: integer. Default value is 1.
# algo_names: Multiple options can be provided with comma seperated.
# print_to_console: default value true
# print_to_file: default value false
# degree_bin_seed=false  ; if true, then the seed vertex will be randomly selected accorss various degree bins
##### Some example graphs and their true triangle count:
# soc-flickr.edges = 58771288
# soc-flickr-und.edges = 548658705
# soc-friendster.edges = 4173724142
# soc-livejournal.edges = 83552703
# soc-orkut.edges = 524643952
# soc-sinaweibo.edges = 212977684
# soc-twitter-konect.edges = 34824916864
# socfb-A-anon.edges = 55606428
# web-indochina-2004-all.edges = 60115561372
# web-cc12-PayLevelDomain.edges = 29923075742
##### Algo_names
# Our algo: EstTriByRWandWghtedSampling
# Baseline:
# Sparsification based: EstTriBySparsification, EstTriByUniformSampling, EstTriByRW
# Sample edge and count based: EstTriByEdgeSampleAndCount, EstTriByRWAndCountPerEdge
# Neighbor sample: EstTriByRWandNborSampling
#
#######
input_files=graphs/graph_in_edges_format/soc-orkut.edges,graphs/graph_in_edges_format/soc-sinaweibo.edges,graphs/graph_in_edges_format/socfb-A-anon.edges,graphs/graph_in_edges_format/soc-flickr-und.edges
triangle_count=212977684,1,2,3
seed_count=1
sparsification_prob=0.01,0.02
subsample_prob=0.05
no_of_repeats=25
algo_names=EdgeEstimator
print_to_console=true
print_to_file=true
degree_bin_seed=false
